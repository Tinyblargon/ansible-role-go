---
name: CI
'on':
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 9 * * 1"

defaults:
  run:
    working-directory: 'tinyblargon.go'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'tinyblargon.go'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible ansible-lint
      - name: Lint code.
        run: ansible-lint

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'tinyblargon.go'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible
      - name: Run unit test playbook.
        run: |
          export ANSIBLE_ROLES_PATH=$(dirname $(pwd))
          ansible-playbook unit-tests.playbook.yml

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - ubuntu2404
          - ubuntu2204
          - ubuntu2004
          - debian12
          - debian11
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'tinyblargon.go'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule molecule-plugins[docker] docker

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
